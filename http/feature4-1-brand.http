
//정책1 : action, entityType, brand(data.name) 명은 필수로 지정해야 한다.
//정책2 : 브랜드명은 유일하다.
//정책3 : 브랜드는 추가만 가능하다.

//(readme 작성 시 문제 노출 및 테스트 시 바로 정책 확인하기위해 해당 영역에 정리하였습니다.)

## 순서대로 진행해주세요!!!

### 1. 신규 브랜드 추가 성공
POST localhost:9090/v1/manage/execute
Content-Type: application/json

{
    "action":"INSERT",
    "entityType":"BRAND",
    "data":{
        "name":"무신사"
    }
}

## 응답 스펙
{
  "success": true,
  "code": 200,
  "message": "SUCCESS",
  "data": {
    "id": 11,
    "name": "무신사"
  },
  "timestamp": "2024-10-28T22:15:51.313418"
}

### 2. 브랜드 추가 실패 - 중복
POST localhost:9090/v1/manage/execute
Content-Type: application/json

{
  "action":"INSERT",
  "entityType":"BRAND",
  "data":{
    "name":"무신사"
  }
}

## 실패 응답 스펙
{
"success": false,
"code": 2001,
"message": "이미 존재하는 브랜드명입니다.",
"timestamp": "2024-10-28T22:16:47.765673"
}

### 3. 브랜드 추가 실패 - 요청 파라미터 오타/누락
POST localhost:9090/v1/manage/execute
Content-Type: application/json

{
  "actions":"INSERT",
  "entityType":"BRAND",
  "data":{
    "name":"무신사"
  }
}

### 4. 브랜드 추가 실패 - 요청값 문제
POST localhost:9090/v1/manage/execute
Content-Type: application/json

{
  "actions":"INSERT",
  "entityType":"BRANDㄴ",
  "data":{
    "name":"무신사"
  }
}

### 5. 브랜드 추가 실패 - 상품 데이터 문제
POST localhost:9090/v1/manage/execute
Content-Type: application/json

{
  "actions":"INSERT",
  "entityType":"BRANDㄴ",
  "data":{
    "상품명":"무신사"
  }
}

### 6. 신규 브랜드 추가 성공(소문자 구분X)
POST localhost:9090/v1/manage/execute
Content-Type: application/json

{
  "action":"insert",
  "entityType":"brand",
  "data":{
    "name":"29cm"
  }
}